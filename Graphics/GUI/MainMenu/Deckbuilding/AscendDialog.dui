<?xml version="1.0"?>
<wrapper class="shopitem-dialog ascend-dialog backdrop dialog" :show="dialogs.IsDialogVisible(diAscension)" dxml-on:click="dialogs.CloseDialog(diAscension)">
	<div class="shopitem-wrapper">
		<div class="showcase" dxml-with="card=deckbuilder.Card">
			<div class="window-shine"></div>
			<img class="league-before league-icon {{ levelup if card.LevelUp }}" :src="HClient.GetLeagueIcon(card.CardInstance.League)" :title="F._d(§league_card_hint, card.CardInstance.League)">
				<icon class="level-number level-{{ card.LevelBefore }}"></icon>
					<div class="league-upgrade" :visible="card.CardInstance.IsLeagueUpgradable or (card.IsMaxLeveLAfter and card.CardInstance.League < 5)"></div>
			</img>
			<div class="arrow"></div>
			<img class="league-after league-icon" :src="HClient.GetLeagueIcon(card.CardInfoAfter.League)" :title="F._d(§league_card_hint, card.CardInfoAfter.League)">
				<icon class="level-number level-{{ card.CardInfoAfter.Level }}"></icon>
			</img>
		</div>
		<stack class="offers">
			<div class="offer" dxml-with="cost=deckbuilder.AscensionCreditCost">
				<stack>
					<btn class="btn-xl btn-currency" :enabled="deckbuilder.CanAscendWithCredits" dxml-on:click="deckbuilder.AscendWithCredits">
						<div class="amount">
							{{ cost.Amount }}
							<img class="icon" src="{{ HClient.CurrencyIcon(cost.Currency.UID) }}"></img>
						</div>
					</btn>
				</stack>
			</div>
			<div class="offer" dxml-with="cost=deckbuilder.AscensionCrystalCost">
				<stack>
					<btn class="btn-xl btn-currency" :visible="deckbuilder.CanAscendWithCrystals" dxml-on:click="deckbuilder.AscendWithCrystals">
						<div class="amount">
							{{ cost.Amount }}
							<img class="icon" src="{{ HClient.CurrencyIcon(cost.Currency.UID) }}"></img>
						</div>
					</btn>
					<btn class="btn-xl btn-currency" :visible="not deckbuilder.CanAscendWithCrystals" dxml-on:click="menu.CurrentMenu := mtShop; shop.ShopItemFilter.Category := scDiamonds">
						<div class="amount">
							{{ cost.Amount }}
							<img class="icon" src="{{ HClient.CurrencyIcon(cost.Currency.UID) }}"></img>
						</div>
					</btn>
				</stack>
			</div>
		</stack>
	</div>
</wrapper>